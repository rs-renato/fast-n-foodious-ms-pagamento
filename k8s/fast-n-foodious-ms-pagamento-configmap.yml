apiVersion: v1
kind: ConfigMap
metadata:
  name: fast-n-foodious-ms-pagamento-env
data:
  MYSQL_DATABASE: FAST_N_FOODIOUS
  MYSQL_HOST: mysql-pagamento
  MYSQL_PORT: '3306'
  MYSQL_USER: fnf_user
  MYSQL_ROOT_HOST: '%'
  NODE_ENV: prod
  SERVER_PORT: '3002'
  DATABASE_ENGINE: nosql
  DOCUMENTDB_URI: mongodb://fnf_user:fnfpass@mongodb:27017/pagamento-db
  DOCUMENTDB_USER: fnf_user
  DOCUMENTDB_DATABASE: pagamento-db
  DOCUMENTDB_DATABASE_TLS_CA_FILE: global-bundle.pem
  AWS_ENDPOINT: http://localstack:4566
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: overwrote-in-deployment-time
  AWS_SECRET_ACCESS_KEY: overwrote-in-deployment-time
  SQS_SOLICITAR_PAGAMENTO_REQ_URL: http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/solicitar-pagamento-req.fifo
  SQS_WEBHOOK_PAGAMENTO_CONFIRMADO_RES_URL: http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/webhook-pagamento-confirmado-res
  SQS_WEBHOOK_PAGAMENTO_REJEITADO_RES_URL: http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/webhook-pagamento-rejeitado-res  
  ensure-users.sh: |
      set -e

      mongosh <<EOF
      use $MONGO_INITDB_DATABASE

      print('mongodb startup script..');
      db.createUser({
        user: '$MONGO_INITDB_ROOT_USERNAME',
        pwd: '$MONGO_INITDB_ROOT_PASSWORD',
        roles: [{
          role: 'readWrite',
          db: '$MONGO_INITDB_DATABASE'
        }]
      })
      print('user created..');

      EOF
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-pagamento-env
data:
  init.sql: |
    -- Criação de banco de dados
    CREATE DATABASE IF NOT EXISTS FAST_N_FOODIOUS;

    -- Configuração de permissão para usuário da aplicação
    GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, ALTER, DROP, INDEX, REFERENCES ON FAST_N_FOODIOUS.* TO 'fnf_user'@'%';
    FLUSH PRIVILEGES;

    USE FAST_N_FOODIOUS;

    --
    -- CRIAÇÃO DE TABELAS
    --

    -- Tabela PAGAMENTO
    CREATE TABLE IF NOT EXISTS PAGAMENTO (
                                          ID INT AUTO_INCREMENT PRIMARY KEY,
                                          PEDIDO_ID INT NOT NULL,
                                          TRANSACAO_ID VARCHAR(255) NOT NULL,
                                          ESTADO_PAGAMENTO INT NOT NULL,
                                          TOTAL DECIMAL(8,2) NOT NULL,
                                          DATA_HORA_PAGAMENTO DATETIME NULL
    );
  init.sh: |
    #!/bin/bash
    awslocal sqs create-queue --endpoint-url http://localhost:4566 --queue-name sqs-dlq.fifo --attributes "FifoQueue=true","DelaySeconds=0"
    awslocal sqs create-queue --endpoint-url http://localhost:4566 --queue-name sqs-dlq --attributes "DelaySeconds=0"

    awslocal sqs create-queue --endpoint-url http://localhost:4566 --queue-name webhook-pagamento-rejeitado-res --attributes '{"RedrivePolicy":"{\"deadLetterTargetArn\":\"arn:aws:sqs:us-east-1:000000000000:sqs-dlq\",\"maxReceiveCount\":\"3\"}","VisibilityTimeout":"1"}'
    awslocal sqs create-queue --endpoint-url http://localhost:4566 --queue-name webhook-pagamento-confirmado-res --attributes '{"RedrivePolicy":"{\"deadLetterTargetArn\":\"arn:aws:sqs:us-east-1:000000000000:sqs-dlq\",\"maxReceiveCount\":\"3\"}","VisibilityTimeout":"1"}'
    awslocal sqs create-queue --endpoint-url http://localhost:4566 --queue-name solicitar-pagamento-req.fifo --attributes '{"FifoQueue":"true","RedrivePolicy":"{\"deadLetterTargetArn\":\"arn:aws:sqs:us-east-1:000000000000:sqs-dlq.fifo\",\"maxReceiveCount\":\"3\"}","VisibilityTimeout":"1"}'
    awslocal sqs create-queue --endpoint-url http://localhost:4566 --queue-name preparacao-pedido-req.fifo --attributes '{"FifoQueue":"true","RedrivePolicy":"{\"deadLetterTargetArn\":\"arn:aws:sqs:us-east-1:000000000000:sqs-dlq.fifo\",\"maxReceiveCount\":\"3\"}","VisibilityTimeout":"1"}'
    awslocal sqs create-queue --endpoint-url http://localhost:4566 --queue-name lgpd-protocolo-delecao-req.fifo --attributes '{"FifoQueue":"true","RedrivePolicy":"{\"deadLetterTargetArn\":\"arn:aws:sqs:us-east-1:000000000000:sqs-dlq.fifo\",\"maxReceiveCount\":\"3\"}","VisibilityTimeout":"1"}'

    awslocal sqs list-queues --endpoint-url http://localhost:4566

    awslocal ses verify-email-identity --email-address sac.fast.n.foodious@gmail.com --endpoint-url=http://localhost:4566    
